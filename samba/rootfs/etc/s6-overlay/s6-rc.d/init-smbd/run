#!/command/with-contenv bashio
# ==============================================================================
# Prepare the Samba service for running
# ==============================================================================
declare password
declare username
declare -a interfaces=()
declare log_level
export HOSTNAME

# Check Login data
if ! bashio::config.has_value 'username' || ! bashio::config.has_value 'password'; then
    bashio::exit.nok "Setting a username and password is required!"
fi

# Read hostname from API or setting default "hassio"
HOSTNAME=$(bashio::info.hostname)
if bashio::var.is_empty "${HOSTNAME}"; then
    bashio::log.warning "Can't read hostname, using default."
    HOSTNAME="hassio"
fi
bashio::log.info "Hostname: ${HOSTNAME}"

# Determine interfaces list
for interface in $(bashio::config 'interfaces'); do
    interfaces+=("${interface}")
done
if [ ${#interfaces[@]} -eq 0 ]; then
    bashio::log.notice "Interfaces: <empty list>"
    bashio::log.notice "Running on localhost (127.0.0.1) only"
    bashio::log.notice "Possible values for the interfaces configuration option are"
    bashio::log.notice "  interfaces:"
    ifconfig | grep -Eo '^\w+' | grep -Ev '^lo|^veth|^docker|^hassio' | while read -r line ; do
        bashio::log.notice "    - ${line}"
    done
else
    bashio::log.info "Interfaces: $(printf '%s ' "${interfaces[@]}")"
fi

# Set Samba log level
case "${__BASHIO_LOG_LEVELS[${__BASHIO_LOG_LEVEL}],,}" in
  trace)
    log_level=3;;
  debug)
    log_level=2;;
  info)
    log_level=1;;
  *)
    log_level=0;;
esac

# Generate Samba configuration.
jq ".interfaces = $(jq -c -n '$ARGS.positional' --args -- "${interfaces[@]}") | .log_level = ${log_level}" /data/options.json \
    | tempio \
      -template /usr/share/tempio/smb.gtpl \
      -out /etc/samba/smb.conf

# Init user
username=$(bashio::config 'username')
password=$(bashio::config 'password')
addgroup "${username}"
adduser -D -H -G "${username}" -s /bin/false "${username}"
# shellcheck disable=SC1117
echo -e "${password}\n${password}" \
    | smbpasswd -a -s -c "/etc/samba/smb.conf" "${username}"

# Temporary workaround for Supervisor breaking changes
if ! bashio::fs.directory_exists "/config" && bashio::fs.directory_exists "/homeassistant"; then
    ln -s "/homeassistant" "/config"
fi
